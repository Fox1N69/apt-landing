---
import "../assets/styles/_fonts.scss";
import { SEO } from "astro-seo";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="Описание"
			content="1. Разработка интерактивных обучающих симуляторов. \
							 2. Интеллектуальных систем на базе искуственного интелекта. \
							 3. Разработка мобильных приложений."
		/>

		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link
			href="
https://cdn.jsdelivr.net/npm/font-proxima-nova@1.0.1/style.min.css
"
			rel="stylesheet"
		/>
		<link
			rel="stylesheet prefetch"
			href="https://cdn.rawgit.com/mfd/e7842774e037edf15919037594a79b2b/raw/665bdfc532094318449f1010323c84013d5af953/graphik.css"
		/>
		<meta name="generator" content={Astro.generator} />
		<SEO
			title="Альянс перспективных технологий | Разработка и автоматизация бизнес процессов."
			description="1. Разработка интерактивных обучающих симуляторов. \
									 2. Интеллектуальных систем на базе искуственного интелекта. \
									 3. Разработка мобильных приложений."
		/>
	</head>
	<body>
		<slot />
		<style lang="scss" is:global>
			* {
				padding: 0;
				margin: 0;
				box-sizing: border-box;
			}

			a {
				text-decoration: none;
				color: white;
			}

			:root {
				--font-family: "Proxima Nova", sans-serif;
				--second-family: "Graphik LCG", sans-serif;
			}
		</style>

		<script>
			import AOS from "aos";
			import "aos/dist/aos.css"; // You can also use <link> for styles
			// ..
			AOS.init({ disable: "mobile" });
		</script>
		<script>
			const smoothScrollLinks = document.querySelectorAll('a[href^="#"]');
			const isMobile = window.matchMedia("(max-width: 600px)").matches; // Adjust the screen width threshold as needed

			// Add an event listener for each link
			smoothScrollLinks.forEach((link) => {
				link.addEventListener("click", (e) => {
					e.preventDefault();

					const targetId = link.getAttribute("href");
					const targetSection = document.querySelector(targetId);

					// Calculate the offset for mobile devices, keeping the default behavior for desktop
					if (isMobile) {
						const headerHeight = document.getElementById("header").offsetHeight;
						const offsetPosition = targetSection.offsetTop - headerHeight;

						// Smooth scroll to the target section with the adjusted offset
						window.scrollTo({
							top: offsetPosition,
							behavior: "smooth",
						});
					} else {
						// Smooth scroll to the target section with the default behavior for desktop
						targetSection.scrollIntoView({
							behavior: "smooth",
						});
					}
				});
			});
		</script>
	</body>
</html>
